/*
 * Serve JSON to our AngularJS client
 */

// For a real app, you'd make database requests here.
// For this example, "data" acts like an in-memory "database"
var data = {
  "posts": [
    {
      "title": "Lorem ipsum",
      "text": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
      "tag": "tag1"
    },
    {
      "title": "Sed egestas",
      "text": "Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus.",
      "tag": "tag2"
    }
  ]
};

// GET

exports.allTags = function(req, res){
    var tags = [];
    
}

exports.sameTag = function(req, res){
    var posts = [];
    var tag = req.params.tag;
    console.log(req.params);
    data.posts.forEach(function (post, i) {
	if(post.tag === tag){
	    posts.push({
		id: i,
		title: post.title,
		text: post.text.substr(0, 50) + '...'
	    });
	}
    });

    res.json({
	posts: posts
    });
};

exports.posts = function (req, res) {
    var posts = [];
    data.posts.forEach(function (post, i) {
	if(post.text === undefined){

	} else {
	    posts.push({
		id: i,
		title: post.title,
		text: post.text.substr(0, 50) + '...'
	    });
	}
    });

    res.json({
	posts: posts
    });
};

exports.post = function (req, res) {
    var id = req.params.id;
    if (id >= 0 && id < data.posts.length) {
	res.json({
	    post: data.posts[id]
	});
    } else {
	res.json(false);
    }
};

// POST

exports.addPost = function (req, res) {
    data.posts.push(req.body);
    console.log(req.body);
    res.json(req.body);
};

// PUT

exports.editPost = function (req, res) {
    var id = req.params.id;

    if (id >= 0 && id < data.posts.length) {
	data.posts[id] = req.body;
	res.json(true);
    } else {
	res.json(false);
    }
};

// DELETE

exports.deletePost = function (req, res) {
    var id = req.params.id;

    if (id >= 0 && id < data.posts.length) {
	data.posts.splice(id, 1);
	res.json(true);
    } else {
	res.json(false);
    }
};